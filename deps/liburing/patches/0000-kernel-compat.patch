From 474e5a090b428bd5baa9039fcede263c0a3d43e0 Mon Sep 17 00:00:00 2001
From: Zach Bjornson <zbbjornson@gmail.com>
Date: Mon, 22 Jun 2020 03:07:16 +0000
Subject: [PATCH] deps/liburing: pregenerate compat.h

compat.h is generated at config time. To support older kernels, we always need
to use the compatiblity typedefs/structs.
---
 deps/liburing/.gitignore                      |  1 -
 deps/liburing/src/include/liburing.h          | 10 +++++-----
 deps/liburing/src/include/liburing/compat.h   | 20 +++++++++++++++++++
 deps/liburing/src/include/liburing/io_uring.h |  2 +-
 deps/liburing/src/queue.c                     |  4 ++--
 5 files changed, 28 insertions(+), 9 deletions(-)
 create mode 100644 deps/liburing/src/include/liburing/compat.h

diff --git a/deps/liburing/.gitignore b/deps/liburing/.gitignore
index 9784f0b1..301a3e87 100644
--- a/deps/liburing/.gitignore
+++ b/deps/liburing/.gitignore
@@ -8,7 +8,6 @@
 
 /src/liburing.a
 /src/liburing.so*
-/src/include/liburing/compat.h
 
 /examples/io_uring-cp
 /examples/io_uring-test
diff --git a/deps/liburing/src/include/liburing.h b/deps/liburing/src/include/liburing.h
index dd85f7be..f8d030dc 100644
--- a/deps/liburing/src/include/liburing.h
+++ b/deps/liburing/src/include/liburing.h
@@ -86,9 +86,9 @@ unsigned io_uring_peek_batch_cqe(struct io_uring *ring,
 	struct io_uring_cqe **cqes, unsigned count);
 extern int io_uring_wait_cqes(struct io_uring *ring,
 	struct io_uring_cqe **cqe_ptr, unsigned wait_nr,
-	struct __kernel_timespec *ts, sigset_t *sigmask);
+	struct uv__kernel_timespec *ts, sigset_t *sigmask);
 extern int io_uring_wait_cqe_timeout(struct io_uring *ring,
-	struct io_uring_cqe **cqe_ptr, struct __kernel_timespec *ts);
+	struct io_uring_cqe **cqe_ptr, struct uv__kernel_timespec *ts);
 extern int io_uring_submit(struct io_uring *ring);
 extern int io_uring_submit_and_wait(struct io_uring *ring, unsigned wait_nr);
 extern struct io_uring_sqe *io_uring_get_sqe(struct io_uring *ring);
@@ -275,7 +275,7 @@ static inline void io_uring_prep_nop(struct io_uring_sqe *sqe)
 }
 
 static inline void io_uring_prep_timeout(struct io_uring_sqe *sqe,
-					 struct __kernel_timespec *ts,
+					 struct uv__kernel_timespec *ts,
 					 unsigned count, unsigned flags)
 {
 	io_uring_prep_rw(IORING_OP_TIMEOUT, sqe, -1, ts, 1, count);
@@ -307,7 +307,7 @@ static inline void io_uring_prep_cancel(struct io_uring_sqe *sqe, void *user_dat
 }
 
 static inline void io_uring_prep_link_timeout(struct io_uring_sqe *sqe,
-					      struct __kernel_timespec *ts,
+					      struct uv__kernel_timespec *ts,
 					      unsigned flags)
 {
 	io_uring_prep_rw(IORING_OP_LINK_TIMEOUT, sqe, -1, ts, 1, 0);
@@ -399,7 +399,7 @@ static inline void io_uring_prep_recv(struct io_uring_sqe *sqe, int sockfd,
 }
 
 static inline void io_uring_prep_openat2(struct io_uring_sqe *sqe, int dfd,
-					const char *path, struct open_how *how)
+					const char *path, struct uv__open_how *how)
 {
 	io_uring_prep_rw(IORING_OP_OPENAT2, sqe, dfd, path, sizeof(*how),
 				(uint64_t) (uintptr_t) how);
diff --git a/deps/liburing/src/include/liburing/compat.h b/deps/liburing/src/include/liburing/compat.h
new file mode 100644
index 00000000..6d68d11c
--- /dev/null
+++ b/deps/liburing/src/include/liburing/compat.h
@@ -0,0 +1,20 @@
+#ifndef LIBURING_COMPAT_H
+#define LIBURING_COMPAT_H
+
+#include <stdint.h>
+#include <inttypes.h>
+
+struct uv__kernel_timespec {
+	int64_t		tv_sec;
+	long long	tv_nsec;
+};
+
+typedef int uv__kernel_rwf_t;
+
+struct uv__open_how {
+	uint64_t	flags;
+	uint64_t	mode;
+	uint64_t	resolve;
+};
+
+#endif
diff --git a/deps/liburing/src/include/liburing/io_uring.h b/deps/liburing/src/include/liburing/io_uring.h
index e48d746b..e99807b8 100644
--- a/deps/liburing/src/include/liburing/io_uring.h
+++ b/deps/liburing/src/include/liburing/io_uring.h
@@ -29,7 +29,7 @@ struct io_uring_sqe {
 	};
 	__u32	len;		/* buffer size or number of iovecs */
 	union {
-		__kernel_rwf_t	rw_flags;
+		uv__kernel_rwf_t	rw_flags;
 		__u32		fsync_flags;
 		__u16		poll_events;
 		__u32		sync_range_flags;
diff --git a/deps/liburing/src/queue.c b/deps/liburing/src/queue.c
index 14a0777f..37831a3d 100644
--- a/deps/liburing/src/queue.c
+++ b/deps/liburing/src/queue.c
@@ -146,7 +146,7 @@ out:
  * synchronization, as this function manipulates both the SQ and CQ side.
  */
 int io_uring_wait_cqes(struct io_uring *ring, struct io_uring_cqe **cqe_ptr,
-		       unsigned wait_nr, struct __kernel_timespec *ts,
+		       unsigned wait_nr, struct uv__kernel_timespec *ts,
 		       sigset_t *sigmask)
 {
 	unsigned to_submit = 0;
@@ -181,7 +181,7 @@ int io_uring_wait_cqes(struct io_uring *ring, struct io_uring_cqe **cqe_ptr,
  */
 int io_uring_wait_cqe_timeout(struct io_uring *ring,
 			      struct io_uring_cqe **cqe_ptr,
-			      struct __kernel_timespec *ts)
+			      struct uv__kernel_timespec *ts)
 {
 	return io_uring_wait_cqes(ring, cqe_ptr, 1, ts, NULL);
 }
-- 
2.25.1

